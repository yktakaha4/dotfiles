#!/usr/bin/env zsh

set -eu

local -A opthash
zparseopts -D -A opthash -- a n: c:

local_port="$1"
dest_host_port="$2"
pod_port="$(($RANDOM % 10000 + 40000))"

kcsp_opts=""
kubectl_opts=""
condition=""
if [[ -n "${opthash[(i)-a]}" ]]; then
  kcsp_opts="$kcsp_opts -a"
fi

if [[ -n "${opthash[(i)-n]}" ]]; then
  ns="${opthash[-n]}"
  kcsp_opts="$kcsp_opts -n $ns"
  kubectl_opts="$kubectl_opts -n $ns"
fi

if [[ -n "${opthash[(i)-c]}" ]]; then
  condition="${opthash[-c]}"
fi

pod_name="$(kcsp $(echo "$kcsp_opts") "$condition" | awk '{print $1}')"
if [[ -z "$pod_name" ]]; then
  echo "unfound: $condition" 1>&2
  exit 1
fi

echo "socat route is...
localhost:$local_port
 ↪ $pod_name:$pod_port
  ↪ $dest_host_port" | cowsay -n

# 終了時にバックグラウンドのsocatをクローズ
function cleanup {
  ps ho pid p "$exec_pid" >/dev/null && kill "$exec_pid" >/dev/null
}
trap cleanup EXIT INT TERM

# socatをバックグラウンドで実行
command="socat -d -d tcp-listen:$pod_port,fork,reuseaddr tcp-connect:$dest_host_port"
kubectl exec $(echo "$kubectl_opts") -it "$pod_name" -- $(echo $command) &
exec_pid="$!"

# ポートフォワード
ports="$local_port:$pod_port"
kubectl port-forward $(echo "$kubectl_opts") "$pod_name" "$ports"
